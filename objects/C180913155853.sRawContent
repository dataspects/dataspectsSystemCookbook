{{Concept
|HasEntityTitle=Inheriting annotations if not customized by Indexer
|HasEntityBlurb=Understand how to customize ES doc compilation
}}

When we index a ResourceSilo, we can customize how its Resources entitize its content.

For example, when indexing a SemanticMediaWiki, we can redefine its SemanticMediaWikiPage's aEntities() method.

If the SemanticMediaWikiPage itself represents a single entity, we can write:

<syntaxhighlight lang="ruby">
# Dataspects::DataspectsStandardSystemWikiIndexer.rb
module Dataspects
  class SemanticMediaWikiPage
    def aEntities
      oEntity = Subject.new(self)
</syntaxhighlight>

Now, if you add nothing more to this class, then your entity would set its direct annotations like this:

* its entity level direct annotations in accordance with http://rails.dataspects.com/explain/indexing#Dataspects::Subject
* its resource level direct annotations in accordance with http://192.168.43.91:3000/explain/indexing#Dataspects::SemanticMediaWikiPage
* its resource silo level direct annotations in accordance with http://192.168.43.91:3000/explain/indexing#Dataspects::SemanticMediaWiki

As you can see in the lists, these 3 classes inherit their corresponding default direct annotations from their respective abstract super classes.
