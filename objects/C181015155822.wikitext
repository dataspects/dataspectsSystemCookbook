{{SystemComponent
|HasEntityTitle=dataspects Amazon Elastic Container Registry
|HasEntityKeyword=AWS
}}

== config ==

 user@dockerserver:~$ vi .aws/config

 [default]
 region =
 output =

== credentials ==

 user@dockerserver:~$ vi .aws/credentials

 [default]
 aws_access_key_id =
 aws_secret_access_key =

== describe-repositories &rarr; describe-images ==

 user@dockerserver:~$ aws ecr [https://docs.aws.amazon.com/cli/latest/reference/ecr/describe-repositories.html describe-repositories]
 {
     "repositories": [
         {
             "repositoryArn": "arn:aws:XXXXX.XXX.XXX.XXX-XXX-X:repository/dataspects-XXX-XXX",
             "registryId": "XXXXX",
             "repositoryName": "dataspects-XXX-XXX",
             "repositoryUri": "XXXXX.XXX.XXX.XXX-XXX-X.amazonaws.com/dataspects-XXX-XXX",
             "createdAt": XXXXX.X
         }
     ]
 }

 user@dockerserver:~$ aws ecr [https://docs.aws.amazon.com/cli/latest/reference/ecr/describe-images.html describe-images]
 {
     "imageDetails": [
         {
             "registryId": "XXXXX",
             "repositoryName": "dataspects-XXXXX",
             "imageDigest": "sha256:XXXXX",
             "imageTags": [
                 "X.X.X"
             ],
             "imageSizeInBytes": XXXXX,
             "imagePushedAt": XXXXX.X
         }
     ]
 }

== get-login ==

 user@dockerserver:~$ aws ecr aws ecr [https://docs.aws.amazon.com/cli/latest/reference/ecr/get-login.html get-login] --no-include-email
 docker login -u AWS -p XXXXX https://XXXXX.XXX.XXX.XXX-XXX-X.amazonaws.com

 user@dockerserver:~$ docker login -u AWS -p XXXXX https://XXXXX.XXX.XXX.XXX-XXX-X.amazonaws.com
 Login Succeeded

== docker pull ==

 user@dockerserver:~$ docker pull XXXXX.XXX.XXX.XXX-XXX-X.amazonaws.com/dataspects-XXX:X.X.X
